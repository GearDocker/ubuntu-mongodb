{"name":"monit","description":"Provides recipes for installing monit and maintaining monit configurations.","long_description":"cookbook-monit\n===========\n\nProvides a set of primitives for managing monit and monit configurations.\n\nRequirements\n============\n\nChef\n----\n\nTested on \n\n* `0.10.x`\n* `0.11.x`\n* `0.12.x`\n\nPlatform\n--------\n\nTested on\n\n* Ubuntu 11.04\n* Ubuntu 12.04\n* Ubuntu 14.04\n\nbut older and newer platforms should work just fine.\n\nInstallation\n============\n[Berkshelf](http://berkshelf.com/) is recommended to install this cookbook. In fact, it's recommended to install all your cookbooks! Within your `Berksfile`\n\n```ruby\ncookbook 'monit', git: 'https://github.com/axsuul/cookbook-monit'\n```\n\nRecipes\n=======\n\nSome monit configuration recipes have also been provided for some popular services.\n\ndefault\n-------\n\nInstalls monit as a service using the package manager and drops off a `monitrc` configuration file. Make sure to check out the default attributes file!\n\nUsage\n=====\n\nA `monit` resource is provided to easily manage monit configurations. Here's a simple example\n\n```ruby\nmonit \"postgresql\" do\n  pidfile \"/var/run/postgresql/9.1-main.pid\"\n  start \"/etc/init.d/postgresql start\"\n  stop \"/etc/init.d/postgresql stop\"\nend\n```\n\nDefault action is `:enable`. You can disable by doing\n\n```ruby\nmonit \"postgresql\" do\n    # ...\n    action :disable\nend\n```\n\nWhat happens if you want to run the process as a user? The `monit` resource provides a helper attribute `as` and will load that user's environment while running the `start` and `stop` commands.\n```ruby\nmonit \"sidekiq\" do\n  pidfile \"/app/pids/sidekiq.pid\"\n  start \"/app/bin/sidekiq --pidfile /app/pids/sidekiq.pid\"\n  as \"deployer\"\n  conditions [\n    \"if mem > 256 MB for 1 cycles then restart\",\n    \"if cpu > 90% for 5 cycles then restart\",\n    \"if 5 restarts within 5 cycles then timeout\"\n  ]\nend\n```\n\nYou still have the option to run the commands directly as the user (without environment) with `uid` and `gid`, although most likely you will want to use `as`.\n\n```ruby\nmonit \"sidekiq\" do\n  pidfile \"/app/pids/sidekiq.pid\"\n  uid \"deployer\"\n  gid \"admin\"\n  # ...\nend\n```\n\nNotice that in the above example, `stop` is not set. If `stop` is not set, the provider will use a `SIGTERM` to kill the pid in the `pidfile`.\n\n**No pidfile?**. No worries bro!\n\n```ruby\nmonit \"varnish\" do\n  matching \"varnishd\"\n  # ...\nend\n```\n\nContributing\n============\n\nI love pull requests!\n\nLicense\n=======\n\nAuthor:: James Hu (<hello@james.hu>)\n\nCopyright:: Copyright (c) 2015, James Hu\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n","maintainer":"James Hu","maintainer_email":"hello@james.hu","license":"Apache 2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"monit":"Installs monit"},"version":"1.1.0"}